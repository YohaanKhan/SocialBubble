package com.socialapp.model;

import lombok.Getter;
import lombok.Setter;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;
import java.time.LocalDateTime;

/**
 * Represents a Message entity, mapping to the "messages" collection in MongoDB.
 * <p>
 * This class defines the data structure for a sender, receiver, content
 * of the message, timestamp, and if the message was read or not.
 */
@Getter
@Setter
@Document(collection = "messages")
public class Message {

    /**
     * The unique identifier for the message document, automatically generated by MongoDB.
     */
    @Id
    private String id;

    /**
     * The unique identifier of the user who is sending the message.
     */
    private String senderId;

    /**
     * The unique identifier of the user who is receiving the message.
     */
    private String receiverId;

    /**
     * It contains the message content.
     */
    private String content;

    /**
     * The timestamp indicating when the message was created.
     * Defaults to the current time upon object creation.
     */
    private LocalDateTime timestamp =  LocalDateTime.now();

    /**
     * A boolean indicator, keeps track of the message being read or not.
     * Defaults to {@code false}
     */
    private Boolean isRead =  false;

    /**
     * Default no-argument constructor.
     * Required by persistence frameworks like Spring Data for object instantiation.
     */
    public Message() {}
}
